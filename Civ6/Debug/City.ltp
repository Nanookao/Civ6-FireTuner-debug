<?xml version="1.0"?>
<PanelData xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Name>City</Name>
  <App>Civ6</App>

  <EnterAction>
if TunerCity and TunerCity.Shutdown then  TunerCity:Shutdown()  end
include("TunerCityPanel")
--include("TunerWorldBuilderPanel");
--include("TunerAssetPreviewPanel");
if TunerCity and TunerCity.SetFocused then  TunerCity:SetFocused(true)  end
  </EnterAction>

  <ExitAction>
--if TunerCity and TunerCity.SetFocused then  TunerCity:SetFocused(false)  end
  </ExitAction>

  <CompatibleStates>
    <string>GameCore_Tuner</string>
    <string>TunerCityPanel</string>
    <string>CityPanel</string>
    <string>Main State</string>
    <string>InGame</string>
  </CompatibleStates>
  <LoadStates>
    <string>TunerCityPanel</string>
  </LoadStates>




  <SelectionLists>

    <SelectionListData>
      <Name>Cities-PID,CityID:-1;Original:70;Owner:90;Idx:40;Name:100;X,Y:40;Building:150</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>0</X>
        <Y>30</Y>
      </Location>
      <Size>
        <Width>680</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,City)
  if not TunerCity then  return { "Error: ;;1 TunerCityPanel.lua not loaded" }  end
  return TunerCity:ListCities()
end
      </PopulateList>

      <OnSelection>function(selCity)
  local pCity = TunerCity and TunerCity:SelectCity(selCity)
  if not pCity then  return  end
end
      </OnSelection>
    </SelectionListData>


    <SelectionListData>
      <Name>Stats-Order:0;Stat:80;Value:40</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>700</X>
        <Y>30</Y>
      </Location>
      <Size>
        <Width>180</Width>
        <Height>150</Height>
      </Size>

      <PopulateList>function(PopulateList,CityStat)
  return TunerCity and TunerCity:ListCityStat()
end
      </PopulateList>

      <OnSelection>function(selCityStat)
end
      </OnSelection>
    </SelectionListData>


    <SelectionListData>
      <Name>City Property;Value</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>700</X>
        <Y>180</Y>
      </Location>
      <Size>
        <Width>180</Width>
        <Height>150</Height>
      </Size>

      <PopulateList>function(PopulateList,CityProperty)
  return TunerCity and TunerCity:ListCityProperty()
end
      </PopulateList>

      <OnSelection>function(selCityProperty)
  if not TunerCity then  return  end
  TunerCity.options.PropertyKey = selCityProperty;
end
      </OnSelection>
    </SelectionListData>


    <SelectionListData>
      <Name>Revealed to Civ;NickName</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>900</X>
        <Y>30</Y>
      </Location>
      <Size>
        <Width>180</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,RevealedToCiv)
  return TunerCity and TunerCity:ListRevealedToCiv()
end
      </PopulateList>

      <OnSelection>function(selRevealedToCiv)
end
      </OnSelection>
    </SelectionListData>


    <SelectionListData>
      <Name>Spoofed City Owner</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>1100</X>
        <Y>30</Y>
      </Location>
      <Size>
        <Width>180</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,SpoofToCiv)
  return TunerCity and TunerCity:ListSpoofToCiv()
end
      </PopulateList>

      <OnSelection>function(selSpoofToCiv)
  return TunerCity and TunerCity:SelectSpoofToCiv(selSpoofToCiv)
end
      </OnSelection>

    </SelectionListData>




    <SelectionListData>
      <Name>Built Objects:0;DbIdx:30;Building:100;X,Y:40;State:90</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>0</X>
        <Y>360</Y>
      </Location>
      <Size>
        <Width>390</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,Built)
  return TunerCity and TunerCity:ListCityBuildingsBuilt( {} )
end
      </PopulateList>

      <OnSelection>function(selBuilt)
  return TunerCity and TunerCity:SelectBuilding(selBuilt)
end
      </OnSelection>

    </SelectionListData>


    <SelectionListData>
      <Name>Districts:0;DbIdx:30;District:90;Built:60</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>400</X>
        <Y>360</Y>
      </Location>
      <Size>
        <Width>290</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,District)
  return TunerCity and TunerCity:ListCityDistrictsOrBuildings( {}, 'district', true )  -- district | building | wonder
end
      </PopulateList>

      <OnSelection>function(selDistrict)
  return TunerCity and TunerCity:SelectBuilding(selDistrict, 'district')
end
      </OnSelection>

    </SelectionListData>


    <SelectionListData>
      <Name>Buildings:0;DbIdx:30;Building:90;Built:60</Name>
      <Sorted>true</Sorted>

      <Location>
        <X>700</X>
        <Y>360</Y>
      </Location>
      <Size>
        <Width>290</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,Building)
  return TunerCity and TunerCity:ListCityDistrictsOrBuildings( {}, 'building', true )  -- district | building | wonder
end
      </PopulateList>

      <OnSelection>function(selBuilding)
  return TunerCity and TunerCity:SelectBuilding(selBuilding, 'building')
end
      </OnSelection>

    </SelectionListData>

    <SelectionListData>
      <Name>Wonders:0;DbIdx:30;Wonder:90;Built:60</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>1000</X>
        <Y>360</Y>
      </Location>
      <Size>
        <Width>290</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,Wonder)
  return TunerCity and TunerCity:ListCityDistrictsOrBuildings( {}, 'wonder', true )  -- district | building | wonder
end
      </PopulateList>

      <OnSelection>function(selWonder)
  return TunerCity and TunerCity:SelectBuilding(selWonder, 'wonder')
end
      </OnSelection>

    </SelectionListData>

  </SelectionLists>




  <MultiselectLists>

    <MultiselectListData>
      <Name>Buildings Pillaged?</Name>
      <Sorted>false</Sorted>

      <Location>
        <X>1300</X>
        <Y>360</Y>
      </Location>
      <Size>
        <Width>180</Width>
        <Height>300</Height>
      </Size>

      <PopulateList>function(PopulateList,PillagedBuilding)
  return TunerCity and TunerCity:ListCityBuildingsPillage( {} )
end
      </PopulateList>

      <OnSelected>function(selPillagedBuilding)
end
      </OnSelected>

      <OnDeselected>function(deselPillagedBuilding)
end
      </OnDeselected>

    </MultiselectListData>

  </MultiselectLists>




  <BooleanControls>
    <BooleanControlData>
      <Name>Place District</Name>
      <Location>
        <X>630</X>
        <Y>660</Y>
      </Location>

      <GetFunction>function(IsPlaceDistrict)
  return TunerCity and TunerCity:InPlacementMode('district')
end
      </GetFunction>

      <SetFunction>function(IsPlaceDistrict)
  return TunerCity and TunerCity:SetPlacementMode('district', IsPlaceDistrict)
end
      </SetFunction>
    </BooleanControlData>

    <BooleanControlData>
      <Name>Place Building</Name>
      <Location>
        <X>830</X>
        <Y>660</Y>
      </Location>

      <GetFunction>function(IsPlaceBuilding)
  return TunerCity and TunerCity:InPlacementMode('building')
end
      </GetFunction>

      <SetFunction>function(IsPlaceBuilding)
  return TunerCity and TunerCity:SetPlacementMode('building', IsPlaceBuilding)
end
      </SetFunction>
    </BooleanControlData>

    <BooleanControlData>
      <Name>Place Wonder</Name>
      <Location>
        <X>1030</X>
        <Y>660</Y>
      </Location>

      <GetFunction>function(IsPlaceWonder)
  return TunerCity and TunerCity:InPlacementMode('wonder')
end
      </GetFunction>

      <SetFunction>function(IsPlaceWonder)
  return TunerCity and TunerCity:SetPlacementMode('wonder', IsPlaceWonder)
end
      </SetFunction>
    </BooleanControlData>

  </BooleanControls>




  <IntegerControls>

    <IntegerControlData>
      <Name>City Count</Name>
      <DefaultValue>0</DefaultValue>
      <Location>
        <X>10</X>
        <Y>330</Y>
      </Location>

      <GetFunction>function(CityCount)
  local i = 0;
  local count = 0;
  for i = 0, GameDefines.MAX_PLAYERS-1, 1 do
    local pPlayer = Players[i];
    if pPlayer:WasEverAlive() then
      count = count + pPlayer:GetCities():GetCount();
    end
  end
  return count;
end
      </GetFunction>

      <SetFunction>function(CityCount)
end
      </SetFunction>
    </IntegerControlData>

    <IntegerControlData>
      <Name>District Count</Name>
      <DefaultValue>0</DefaultValue>
      <Location>
        <X>120</X>
        <Y>330</Y>
      </Location>

      <GetFunction>function(DistrictCount)
  local i = 0;
  local count = 0;
  for i = 0, GameDefines.MAX_PLAYERS-1, 1 do
    local pPlayer = Players[i];
    if pPlayer:WasEverAlive() then
      count = count + pPlayer:GetDistricts():GetCount();
    end
  end
  return count;
end
      </GetFunction>

      <SetFunction>function(DistrictCount)
end
      </SetFunction>
    </IntegerControlData>




    <IntegerControlData>
      <Name>Add Production</Name>
      <DefaultValue>1</DefaultValue>
      <Location>
        <X>250</X>
        <Y>660</Y>
      </Location>

      <GetFunction>function(AddProduction)
  return TunerCity and TunerCity.options.AddProduction or 1;
end
      </GetFunction>

      <SetFunction>function(AddProduction)
  TunerCity.options.AddProduction = AddProduction;
end
      </SetFunction>
    </IntegerControlData>


    <IntegerControlData>
      <Name>Build Percent</Name>
      <DefaultValue>100</DefaultValue>
      <Location>
        <X>460</X>
        <Y>660</Y>
      </Location>

      <GetFunction>function(BuildPercent)
  return TunerCity and TunerCity:GetBuildPercent() or "??";
end
      </GetFunction>

      <SetFunction>function(BuildPercent)
  TunerCity:SetBuildPercent(BuildPercent)
end
      </SetFunction>
    </IntegerControlData>




    <IntegerControlData>
      <Name>CityCenter Garrison Damage</Name>
      <DefaultValue>0</DefaultValue>
      <Location>
        <X>200</X>
        <Y>750</Y>
      </Location>

      <GetFunction>function(GarrisonDamage)
  local pDistrict = TunerCity and TunerCity:GetSelectedCityCenter()
  return pDistrict and pDistrict.GetDamage and pDistrict:GetDamage(DefenseTypes.DISTRICT_GARRISON);
end
      </GetFunction>

      <SetFunction>function(GarrisonDamage)
  local pDistrict = TunerCity and TunerCity:GetSelectedCityCenter()
  return pDistrict and pDistrict:SetDamage(DefenseTypes.DISTRICT_GARRISON, GarrisonDamage)
end
      </SetFunction>
    </IntegerControlData>

    <IntegerControlData>
      <Name>CityCenter Wall Damage</Name>
      <DefaultValue>0</DefaultValue>
      <Location>
        <X>200</X>
        <Y>780</Y>
      </Location>

      <GetFunction>function(OuterDamage)
  local pDistrict = TunerCity and TunerCity:GetSelectedCityCenter()
  return pDistrict and pDistrict.GetDamage and pDistrict:GetDamage(DefenseTypes.DISTRICT_OUTER);
end
      </GetFunction>

      <SetFunction>function(OuterDamage)
  local pDistrict = TunerCity and TunerCity:GetSelectedCityCenter()
  return pDistrict and pDistrict:SetDamage(DefenseTypes.DISTRICT_OUTER, OuterDamage);
end
      </SetFunction>
    </IntegerControlData>

    <IntegerControlData>
      <Name>Encamp. Garrison Damage</Name>
      <DefaultValue>0</DefaultValue>
      <Location>
        <X>200</X>
        <Y>810</Y>
      </Location>

      <GetFunction>function(GarrisonDamage)
  local pDistrict = TunerCity and TunerCity:GetDistrictOfSelectedCity('DISTRICT_ENCAMPMENT');
  return pDistrict and pDistrict.GetDamage and pDistrict:GetDamage(DefenseTypes.DISTRICT_GARRISON);
end
      </GetFunction>

      <SetFunction>function(GarrisonDamage)
  local pDistrict = TunerCity and TunerCity:GetDistrictOfSelectedCity('DISTRICT_ENCAMPMENT');
  return pDistrict and pDistrict:SetDamage(DefenseTypes.DISTRICT_GARRISON, GarrisonDamage);
end
      </SetFunction>
    </IntegerControlData>

  </IntegerControls>




  <StringControls>

    <StringControlData>
      <Name>City Name</Name>
      <Location>
        <X>250</X>
        <Y>330</Y>
      </Location>

      <GetFunction>function(CityName)
  local pCity = TunerCity and TunerCity:GetSelectedCity()
  if not pCity then  return "- select city -"  end
  return Locale.Lookup( pCity:GetName() )
end
      </GetFunction>

      <SetFunction>function(CityName)
  local pCity = TunerCity and TunerCity:GetSelectedCity()
  return pCity and pCity:SetName(CityName)
end
      </SetFunction>
    </StringControlData>


    <StringControlData>
      <Name>Currently Building</Name>
      <Location>
        <X>10</X>
        <Y>660</Y>
      </Location>

      <GetFunction>function(CurrentlyBuilding)
  return TunerCity and TunerCity:GetCurrentlyBuildingLoc() or ""
end
      </GetFunction>

      <SetFunction>function(CurrentlyBuilding)
end
      </SetFunction>
    </StringControlData>




    <StringControlData>
      <Name></Name>
      <Location>
        <X>830</X>
        <Y>690</Y>
      </Location>

      <GetFunction>function(PlaceBuilding)
  local dbBuildingInfo = TunerCity and TunerCity:GetPlacementModeBuilding()
  return dbBuildingInfo and Locale.Lookup( dbBuildingInfo.Name )
end
      </GetFunction>

      <SetFunction>function(PlaceBuilding)
end
      </SetFunction>
    </StringControlData>




    <StringControlData>
      <Name>Property Key</Name>
      <Location>
        <X>700</X>
        <Y>330</Y>
      </Location>

      <GetFunction>function(PropertyKey)
  return TunerCity and TunerCity.options.PropertyKey;
end
      </GetFunction>

      <SetFunction>function(PropertyKey)
  TunerCity.options.PropertyKey = PropertyKey;
end
      </SetFunction>
    </StringControlData>

    <StringControlData>
      <Name>Property Value</Name>
      <Location>
        <X>850</X>
        <Y>330</Y>
      </Location>

      <GetFunction>function(PropertyValue)
  return TunerCity and TunerCity.options.PropertyValue;
end
      </GetFunction>

      <SetFunction>function(PropertyValue)
  TunerCity.options.PropertyValue = PropertyValue;
end
      </SetFunction>
    </StringControlData>

  </StringControls>




  <Actions>

    <ActionData>
      <Name>+ Production</Name>
      <Location>
        <X>380</X>
        <Y>663</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
if pCity then
  local pBuildQueue = pCity:GetBuildQueue();
  pBuildQueue:AddProgress(TunerCity.options.AddProduction or 1);
end
      </Action>
    </ActionData>


    <ActionData>
      <Name>Pop +1</Name>
      <Location>
        <X>10</X>
        <Y>700</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and pCity:ChangePopulation(1);
      </Action>
    </ActionData>

    <ActionData>
      <Name>Pop -1</Name>
      <Location>
        <X>60</X>
        <Y>700</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and pCity:ChangePopulation(-1);
      </Action>
    </ActionData>


    <ActionData>
      <Name>Loyalty +10</Name>
      <Location>
        <X>120</X>
        <Y>700</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and pCity:ChangeLoyalty(10);
      </Action>
    </ActionData>

    <ActionData>
      <Name>Loyalty -10</Name>
      <Location>
        <X>190</X>
        <Y>700</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and pCity:ChangeLoyalty(-10);
      </Action>
    </ActionData>


    <ActionData>
      <Name>Toggle Pillaged</Name>
      <Location>
        <X>280</X>
        <Y>700</Y>
      </Location>

      <Action>
return TunerCity and TunerCity:TogglePillaged()
      </Action>
    </ActionData>




    <ActionData>
      <Name>dmg +25</Name>
      <Location>
        <X>400</X>
        <Y>750</Y>
      </Location>

      <Action>
local pDistrict = TunerCity and TunerCity:GetSelectedCityCenter()
return pDistrict and pDistrict:ChangeDamage(DefenseTypes.DISTRICT_GARRISON, 25);
      </Action>
    </ActionData>

    <ActionData>
      <Name>dmg +25</Name>
      <Location>
        <X>400</X>
        <Y>780</Y>
      </Location>

      <Action>
local pDistrict = TunerCity and TunerCity:GetSelectedCityCenter()
return pDistrict and pDistrict:ChangeDamage(DefenseTypes.DISTRICT_OUTER, 25);
      </Action>
    </ActionData>

    <ActionData>
      <Name>dmg +25</Name>
      <Location>
        <X>400</X>
        <Y>810</Y>
      </Location>

      <Action>
local pDistrict = TunerCity and TunerCity:GetDistrictOfSelectedCity("DISTRICT_ENCAMPMENT");
return pDistrict and pDistrict:ChangeDamage(DefenseTypes.DISTRICT_GARRISON, 25);
      </Action>
    </ActionData>




    <ActionData>
      <Name>AI Focus: none</Name>
      <Location>
        <X>10</X>
        <Y>750</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
--return pCity and Network.SendSetCityAIFocus(pCity :GetID(), CityAIFocusTypes.NO_CITY_AI_FOCUS_TYPE);
      </Action>
    </ActionData>

    <ActionData>
      <Name>AI Focus: food</Name>
      <Location>
        <X>10</X>
        <Y>780</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
--return pCity and Network.SendSetCityAIFocus(pCity :GetID(), CityAIFocusTypes.CITY_AI_FOCUS_TYPE_FOOD);
      </Action>
    </ActionData>

    <ActionData>
      <Name>AI Focus: prod</Name>
      <Location>
        <X>10</X>
        <Y>810</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
--return pCity and Network.SendSetCityAIFocus(pCity :GetID(), CityAIFocusTypes.CITY_AI_FOCUS_TYPE_PRODUCTION);
      </Action>
    </ActionData>

    <ActionData>
      <Name>AI Focus: gold</Name>
      <Location>
        <X>10</X>
        <Y>840</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
--return pCity and Network.SendSetCityAIFocus(pCity :GetID(), CityAIFocusTypes.CITY_AI_FOCUS_TYPE_GOLD);
      </Action>
    </ActionData>




    <ActionData>
      <Name>Set Property</Name>
      <Location>
        <X>1000</X>
        <Y>333</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and pCity:SetProperty( TunerCity.options.PropertyKey, TunerCity.options.PropertyValue )
      </Action>
    </ActionData>

    <ActionData>
      <Name>Clear Property</Name>
      <Location>
        <X>1080</X>
        <Y>333</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and pCity:SetProperty( TunerCity.options.PropertyKey, nil )
      </Action>
    </ActionData>




    <ActionData>
      <Name>Set As Capital</Name>
      <Location>
        <X>1300</X>
        <Y>30</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and CityManager.SetAsCapital(pCity);
      </Action>
    </ActionData>

    <ActionData>
      <Name>Set As Original Capital</Name>
      <Location>
        <X>1300</X>
        <Y>70</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and CityManager.SetAsOriginalCapital(pCity);
      </Action>
    </ActionData>

    <ActionData>
      <Name>MAKE FREE CITY</Name>
      <Location>
        <X>1300</X>
        <Y>110</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and CityManager.TransferCityToFreeCities(pCity);
      </Action>
    </ActionData>

    <ActionData>
      <Name>DESTROY CITY</Name>
      <Location>
        <X>1300</X>
        <Y>150</Y>
      </Location>

      <Action>
local pCity = TunerCity and TunerCity:GetSelectedCity()
return pCity and Cities.DestroyCity(pCity);
      </Action>
    </ActionData>

  </Actions>

</PanelData>
